name: .NET CI/CD Workflow

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [published]
  
jobs:
  prepare_versions:
    name: Create Version Strings
    runs-on: ubuntu-latest
    outputs:
      ReleaseVersion: ${{ steps.find.outputs.tag }}
      PreviewAssemblyVersion: ${{ steps.set_version.outputs.preview_assembly_version }}
      PreviewPackageVersion: ${{ steps.set_version.outputs.preview_package_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Find Latest Tag
        id: find
        uses: oprypin/find-latest-tag@v1.0.4
        with:
          repository: ${{ github.repository }}
          releases-only: true
      - name: Set version output
        id: set_version
        run: |
          echo "::set-output name=preview_assembly_version::${{ steps.find.outputs.tag }}.${{ github.run_number }}"
          echo "::set-output name=preview_package_version::${{ steps.find.outputs.tag }}.${{ github.run_number }}-preview"
          
  build_test:
    name: Pull Request Job
    needs: prepare_versions
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Build (${{ needs.prepare_versions.outputs.PreviewAssemblyVersion }})
        run: dotnet build --configuration Release /p:Version=${{ needs.prepare_versions.outputs.PreviewAssemblyVersion }}
      - name: Test
        run: dotnet test --configuration Release --no-build

  build_pack_publish_preview:
    name: Merge Job
    needs: prepare_versions
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Build (${{ needs.prepare_versions.outputs.PreviewAssemblyVersion }})
        run: dotnet build --configuration Release /p:Version=${{ needs.prepare_versions.outputs.PreviewAssemblyVersion }}
      - name: Test
        run: dotnet test --configuration Release --no-build
      - name: Pack
        run: dotnet pack --configuration Release --no-build --output nupkgs /p:Version=${{ needs.prepare_versions.outputs.PreviewPackageVersion }}
      - name: Publish NuGet
        run: dotnet nuget push "nupkgs/*.nupkg" -k ${{ secrets.NugetKey }} -s https://api.nuget.org/v3/index.json --skip-duplicate

  build_pack_publish_release:
    name: Release Job
    needs: prepare_versions
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Build (${{ needs.prepare_versions.outputs.ReleaseVersion }})
        run: dotnet build --configuration Release /p:Version=${{ needs.prepare_versions.outputs.ReleaseVersion }}
      - name: Test
        run: dotnet test --configuration Release --no-build
      - name: Pack
        run: dotnet pack --configuration Release --no-build --output nupkgs /p:Version=${{ needs.prepare_versions.outputs.ReleaseVersion }}
      - name: Publish NuGet
        run: dotnet nuget push "nupkgs/*.nupkg" -k ${{ secrets.NugetKey }} -s https://api.nuget.org/v3/index.json --skip-duplicate
  
  publish-docs:
    name: Publish Docs
    needs: build_pack_publish_release
    continue-on-error: true
    if: github.event_name == 'release'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Dotnet Setup
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - run: dotnet tool update -g docfx
    - run: docfx docfx.json
    - name: Setup Pages
      uses: actions/configure-pages@v3
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        # Upload entire repository
        path: '_site'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
